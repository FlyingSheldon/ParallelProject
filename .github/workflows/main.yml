# This is a basic workflow to help you get started with Actions

name: PP Build and Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ main ]
  push:
    branches: [ ci-test ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: ${ { matrix.config.name } }
    runs-on: ${ { matrix.config.os } }
    strategy:
      fail-fast: false
      matrix:
        config:
        - os: ubuntu-latest
          name: "Ubuntu Latest GCC" 
          artifact: "Linux.tar.xz"
          build_type: "Release" 
          cc: "gcc"
          cxx: "g++"
          
        - os: macos-latest
          name: "macOS Latest Clang" 
          artifact: "macOS.tar.xz"
          build_type: "Release"
          cc: "clang"
          cxx: "clang++"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Install LLVM and Clang
        # You may pin to the exact commit or the version.
        # uses: KyleMayes/install-llvm-action@05c61da4ecfc850b6112f0b289000c2c0fecbcc8
        uses: KyleMayes/install-llvm-action@v1.5.0
      
      - name: Get latest CMake and ninja
        # Using 'latest' branch, the most recent CMake and ninja are installed.
        uses: lukka/get-cmake@latest

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          clang --version
          cmake --version
